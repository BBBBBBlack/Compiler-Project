{
    "config": {
        "sourceCodePath": "../data/zlex_in/source_code.txt",
        "tokenOutPath": "../data/zlex_out/lexicalAnalysis.md",
        "symbolTablePath": "../data/zlex_out/symbolTable.txt",
	"FAOutPath": "../data/zlex_out/FA.md",
        "printFA": true
    },
    "grammar": [
	{
	    "pattern": "\\\\\\t|\\\\\\n| ",
	    "action": "",
	    "note": ""
	},
        {
            "pattern": "[0-9]+(.[0-9]+)?",
            "action": "Token token(yytext, tokenFile, true);token.print_token();",
            "note": "NUMBER"
        },
        {
            "pattern": "int",
            "action": "Token token(yytext, tokenFile, true);token.print_token();",
            "note": "KEYWORD"
        },
        {
            "pattern": "float",
            "action": "Token token(yytext, tokenFile, false);token.print_token();",
            "note": "KEYWORD"
        },
        {
            "pattern": "double",
            "action": "Token token(yytext, tokenFile, false);token.print_token();",
            "note": "KEYWORD"
        },
        {
            "pattern": "long",
            "action": "Token token(yytext, tokenFile, false);token.print_token();",
            "note": "KEYWORD"
        },
        {
            "pattern": "if",
            "action": "Token token(yytext, tokenFile, false);token.print_token();",
            "note": "KEYWORD"
        },
        {
            "pattern": "else",
            "action": "Token token(yytext, tokenFile, false);token.print_token();",
            "note": "KEYWORD"
        },
        {
            "pattern": "while",
            "action": "Token token(yytext, tokenFile, false);token.print_token();",
            "note": "KEYWORD"
        },
        {
            "pattern": "for",
            "action": "Token token(yytext, tokenFile, false);token.print_token();",
            "note": "KEYWORD"
        },
        {
            "pattern": "do",
            "action": "Token token(yytext, tokenFile, false);token.print_token();",
            "note": "KEYWORD"
        },
        {
            "pattern": "break",
            "action": "Token token(yytext, tokenFile, false);token.print_token();",
            "note": "KEYWORD"
        },
        {
            "pattern": "continue",
            "action": "Token token(yytext, tokenFile, false);token.print_token();",
            "note": "KEYWORD"
        },
        {
            "pattern": "return",
            "action": "Token token(yytext, tokenFile, false);token.print_token();",
            "note": "KEYWORD"
        },
        {
            "pattern": "void",
            "action": "Token token(yytext, tokenFile, false);token.print_token();",
            "note": "KEYWORD"
        },
        {
            "pattern": "main",
            "action": "Token token(yytext, tokenFile, false);token.print_token();",
            "note": "IDENTIFIER"
        },
        {
            "pattern": "{",
            "action": "Token token(yytext, tokenFile, false);token.print_token();",
            "note": ""
        },
        {
            "pattern": "}",
            "action": "Token token(yytext, tokenFile, false);token.print_token();",
            "note": ""
        },
        {
            "pattern": "\\\\(",
            "action": "Token token(yytext, tokenFile, false);token.print_token();",
            "note": ""
        },
        {
            "pattern": "\\\\)",
            "action": "Token token(yytext, tokenFile, false);token.print_token();",
            "note": ""
        },
        {
            "pattern": "\\\\[",
            "action": "Token token(yytext, tokenFile, false);token.print_token();",
            "note": ""
        },
        {
            "pattern": "\\\\]",
            "action": "Token token(yytext, tokenFile, false);token.print_token();",
            "note": ""
        },
        {
            "pattern": ";",
            "action": "Token token(yytext, tokenFile, false);token.print_token();",
            "note": ""
        },
        {
            "pattern": ",",
            "action": "Token token(yytext, tokenFile, false);token.print_token();",
            "note": ""
        },
        {
            "pattern": "=",
            "action": "Token token(yytext, tokenFile, false);token.print_token();",
            "note": ""
        },
        {
            "pattern": "<",
            "action": "Token token(yytext, tokenFile, false);token.print_token();",
            "note": ""
        },
        {
            "pattern": "<=",
            "action": "Token token(yytext, tokenFile, false);token.print_token();",
            "note": ""
        },
        {
            "pattern": ">",
            "action": "Token token(yytext, tokenFile, false);token.print_token();",
            "note": ""
        },
        {
            "pattern": ">=",
            "action": "Token token(yytext, tokenFile, false);token.print_token();",
            "note": ""
        },
        {
            "pattern": "==",
            "action": "Token token(yytext, tokenFile, false);token.print_token();",
            "note": ""
        },
        {
            "pattern": "\\\\!=",
            "action": "Token token(yytext, tokenFile, false);token.print_token();",
            "note": ""
        },
        {
            "pattern": "\\\\+",
            "action": "Token token(yytext, tokenFile, false);token.print_token();",
            "note": ""
        },
        {
            "pattern": "-",
            "action": "Token token(yytext, tokenFile, false);token.print_token();",
            "note": ""
        },
        {
            "pattern": "\\\\*",
            "action": "Token token(yytext, tokenFile, false);token.print_token();",
            "note": ""
        },
        {
            "pattern": "/",
            "action": "Token token(yytext, tokenFile, false);token.print_token();",
            "note": ""
        },
        {
            "pattern": "%",
            "action": "Token token(yytext, tokenFile, false);token.print_token();",
            "note": ""
        },
        {
            "pattern": "\\\\+\\\\+",
            "action": "Token token(yytext, tokenFile, false);token.print_token();",
            "note": ""
        },
        {
            "pattern": "--",
            "action": "Token token(yytext, tokenFile, false);token.print_token();",
            "note": ""
        },
        {
            "pattern": "\\\\+=",
            "action": "Token token(yytext, tokenFile, false);token.print_token();",
            "note": ""
        },
        {
            "pattern": "-=",
            "action": "Token token(yytext, tokenFile, false);token.print_token();",
            "note": ""
        },
        {
            "pattern": "\\\\*=",
            "action": "Token token(yytext, tokenFile, false);token.print_token();",
            "note": ""
        },
        {
            "pattern": "/=",
            "action": "Token token(yytext, tokenFile, false);token.print_token();",
            "note": ""
        },
        {
            "pattern": "%=",
            "action": "Token token(yytext, tokenFile, false);token.print_token();",
            "note": ""
        },
        {
            "pattern": "&&",
            "action": "Token token(yytext, tokenFile, false);token.print_token();",
            "note": ""
        },
        {
            "pattern": "\\\\|\\\\|",
            "action": "Token token(yytext, tokenFile, false);token.print_token();",
            "note": ""
        },
        {
            "pattern": "[a-zA-Z\\\\_]+[a-zA-Z0-9\\\\_]*",
            "action": "Token token(yytext, tokenFile, false);token.print_token();",
            "note": "IDENTIFIER"
        }
    ]
}
