#include "Parser.hpp"

void Parser::setOutputFile(std::string fileName)
{
    outputFile = new std::ofstream(); // 申请内存
    std::string folderPath = fileName.substr(0, fileName.find_last_of("/\\"));
    std::filesystem::create_directories(folderPath);
    outputFile->open(fileName, std::ios::trunc);
    if (!outputFile->is_open())
    {
        perror("打开文件失败");
    }

    *outputFile << "Generated by \n"
                << "```text\n"
                << BANNER
                << "\n```\n";

    // 向outFile写入当前时间
    std::time_t currentTime = std::time(nullptr);
    *outputFile << "Generate time: " << std::asctime(std::localtime(&currentTime));
    outputFile->flush();
}

void Parser::grammarAnalysis(std::string tokenFile, ParseTab &parseTab)
{
    std::ifstream tokenStream(tokenFile);
    if (!tokenStream.is_open())
    {
        perror("Token File打开失败");
    }

    std::string line;
    while (std::getline(tokenStream, line))
    {
        std::istringstream iss(line);
        std::string token;
        while (iss >> token)
        {
            // TODO
        }
    }
}